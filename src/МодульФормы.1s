Перем 
	ОписаниеФильтра,ЗФ1,ЗФ2,ЗФ3,ЗФ4,ЗФ5,ЗФ6, ЗФ7, ЗФ8,	// для универсального фильтра     
	глТЗДерево,
	Таб,НаименованиеОтчета,
	МаксГруппировка;//Для хранения числа группировок. Для оформления группировочных строк в таблице.
	
Процедура Печать(пТаблица,пСортируемыеКолонки = "") Далее
Функция ПолучитьДанныеДляКомпоновки() Далее
	
//--------------------------------------------------------------------------------- 
Функция ВыборСортировки(пИмяПоказателя)
	Сп = СоздатьОбъект("СписокЗначений");
	//Сп.ДобавитьЗначение(пТовар,"Товар");
	Сп.ДобавитьЗначение(пИмяПоказателя,"Показатель");
	Возврат Сп;
КонецФункции	// ВыборСортировки 	
            
//--------------------------------------------------------------------------------- 
Процедура ОбработкаЯчейкиТаблицы(пЗначение,пФлагСтандОбраб,пТаблица,пАдрес)
	Перем ВыбЗнач;
	
	Если ТипЗначенияСтр(пЗначение) = "СписокЗначений" Тогда
		Сп = СоздатьОбъект("СписокЗначений");
		//Сп.ДобавитьЗначение("Открыть","Открыть карточку");
		Сп.ДобавитьЗначение("Сорт+","Сортировать по возр.");
		Сп.ДобавитьЗначение("Сорт-","Сортировать по убыв.");

		Если Сп.ВыбратьЗначение(ВыбЗнач,,,,1) = 1 Тогда
			//СортируемыеКолонки = "";
			ИмяПоказателя = пЗначение.Получить("Показатель");
			СортируемыеКолонки = ИмяПоказателя;

			//глТЗДерево.Сортировать(СортируемыеКолонки + ?(ВыбЗнач = "Сорт+","+","-"));
			Печать(глТЗДерево,СортируемыеКолонки + ?(ВыбЗнач = "Сорт+","+","-"));
		КонецЕсли;
	Иначе
		пФлагСтандОбраб =1;	
	КонецЕсли;
КонецПроцедуры

//--------------------------------------------------------------------------------- 
Функция МаксимумИзТЗ(пИмя,пТЗ)
	Перем лТЗ;
	
	лРезультат = 0;
                  
	пТЗ.Выгрузить(лТЗ,,,пИмя);
	лТЗ.ВыбратьСтроки();
	
	Пока лТЗ.ПолучитьСтроку() = 1 Цикл
		лРезультат = Макс(лРезультат,лТЗ.ПолучитьЗначение(лТЗ.НомерСтроки,пИмя));
	КонецЦикла;
	
	Возврат лРезультат;
КонецФункции

//--------------------------------------------------------------------------------- 
Функция ОбновитьФорму()
КонецФункции	// ОбновитьФорму

//--------------------------------------------------------------------------------- 
Функция ЗагрузитьВДеревоТЗ(Знач пТЗ,пГруппировка,Знач пРесурсыГрупп)
	
	Если пТЗ.КоличествоСтрок() = 0 Тогда
		Возврат пТЗ;
	КонецЕсли;
	
	лТЗ = СоздатьОбъект("ТаблицаЗначений");
	лГруппировки = СоздатьОбъект("СписокЗначений");
	пГруппировка.Выгрузить(лГруппировки);

	Если лГруппировки.РазмерСписка()>0 Тогда        
		ИмяКолонки = лГруппировки.ПолучитьЗначение(1);
		лГруппировки.УдалитьЗначение(1);
		                           
		пТЗ.Сортировать(ИмяКолонки);
		
		лТЗ.НоваяКолонка("Группировка");
		лТЗ.НоваяКолонка("ИмяГруппировки");
		лТЗ.НоваяКолонка("ТЗДетализация","ТаблицаЗначений"); 
		              
		КолВоРесурсов = пРесурсыГрупп.РазмерСписка();
		Для Сч = 1 По КолВоРесурсов Цикл
			ИмяРесурса = пРесурсыГрупп.ПолучитьЗначение(Сч);
			лТЗ.НоваяКолонка(ИмяРесурса,"Число"); 
		КонецЦикла;
	Иначе            
		Возврат пТЗ;	//Детализация
	КонецЕсли;

	НомерНачСтроки = 1;
	НомерКонСтроки = 1;
	
	СчСтрок = 1;
	            
	Пока 1=1 Цикл
		ТекЗначГруппировки = пТЗ.ПолучитьЗначение(СчСтрок,ИмяКолонки);
		
		НомерКонСтроки = СчСтрок;
		
		Если СчСтрок = пТЗ.КоличествоСтрок() Тогда
			СледЗначениеГруппировки = "!№;%:?*()";
		Иначе
			СледЗначениеГруппировки = пТЗ.ПолучитьЗначение(СчСтрок+1,ИмяКолонки);
		КонецЕсли;
			
			
		Если (ТекЗначГруппировки<>СледЗначениеГруппировки) Тогда   
			
			лВыгрузка = СоздатьОбъект("ТаблицаЗначений");
			пТЗ.Выгрузить(лВыгрузка,НомерНачСтроки,НомерКонСтроки); 
			
			лВыгрузка.УдалитьКолонку(ИмяКолонки);
			           
			лТЗ.НоваяСтрока();          
			лТЗ.Группировка = ?(ПустоеЗначение(ТекЗначГруппировки)=1,"<"+ИмяКолонки+": ПУСТОЕ ЗНАЧЕНИЕ>",ТекЗначГруппировки);              
			лТЗ.ИмяГруппировки = ИмяКолонки;     
		                  
			лТЗ.ТЗДетализация = ЗагрузитьВДеревоТЗ(лВыгрузка,лГруппировки,пРесурсыГрупп);
			           
			//Расчет суммы по ресурсам.
			Для Сч = 1 По КолВоРесурсов Цикл
				ИмяРесурса = пРесурсыГрупп.ПолучитьЗначение(Сч);
				
				Если (Лев(ИмяРесурса,4)="сред") Тогда //Расчёт среднего
					лИмяРесурса = Сред(ИмяРесурса,5);
					лТЗ.УстановитьЗначение(лТЗ.НомерСтроки,ИмяРесурса,лТЗ.ТЗДетализация.Итог(лИмяРесурса)/лТЗ.ТЗДетализация.КоличествоСтрок());   
				ИначеЕсли (Лев(ИмяРесурса,3)<>"прц") Тогда	//Расчет доли и среднего по особому	и 
					лТЗ.УстановитьЗначение(лТЗ.НомерСтроки,ИмяРесурса,лТЗ.ТЗДетализация.Итог(ИмяРесурса));   
				КонецЕсли;
			КонецЦикла;			
			
			НомерНачСтроки = СчСтрок+1;
		КонецЕсли;
			
		НомерКонСтроки = СчСтрок;
		СчСтрок = СчСтрок + 1;
		
		Если СчСтрок>пТЗ.КоличествоСтрок() Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла; 
	
	//Расчет долей ресурсов
	Для Сч = 1 По КолВоРесурсов Цикл
		ИмяРесурса = пРесурсыГрупп.ПолучитьЗначение(Сч);
		
		Если Лев(ИмяРесурса,3)="прц" Тогда
			ИмяРесурсаДляРасчетаДоли = Сред(ИмяРесурса,4);
			
			лТЗ.ВыбратьСтроки();
			Пока лТЗ.ПолучитьСтроку() = 1 Цикл       
				ЗначениеРасчетногоРесурса = лТЗ.ПолучитьЗначение(лТЗ.НомерСтроки,ИмяРесурсаДляРасчетаДоли);
				ЗначениеДоли = ?(лТЗ.Итог(ИмяРесурсаДляРасчетаДоли)<>0,ЗначениеРасчетногоРесурса/лТЗ.Итог(ИмяРесурсаДляРасчетаДоли)*100,0);
				лТЗ.УстановитьЗначение(лТЗ.НомерСтроки,ИмяРесурса,ЗначениеДоли);   
			КонецЦикла;                     
			
		ИначеЕсли Лев(ИмяРесурса,4)="сред" Тогда             
			ИмяРесурсаДляРасчетаСреднего = Сред(ИмяРесурса,5);
			
		КонецЕсли;
	КонецЦикла;			
	
	Возврат лТЗ;          
КонецФункции 

//--------------------------------------------------------------------------------
Функция СмотретьДерево(пТЗ,Родитель = "",УровеньДерева = 1)  
	//Печатаем перемещения
	Если УровеньДерева = 2 Тогда   
		//ПеремещениеНасыщениеАртикульности(пТЗ,"",1);
	КонецЕсли;
	
	ВыбраннаяСтрока = 0;
	Если пТЗ.ВыбратьСтроку(ВыбраннаяСтрока) = 1 Тогда	//Если Ок, то заходим в Детализацию
		Если пТЗ.ВидимостьКолонки("ТЗДетализация") <> -1 Тогда
			пТЗ.ПолучитьСтрокуПоНомеру(ВыбраннаяСтрока);
			СмотретьДерево(пТЗ.ТЗДетализация,пТЗ,УровеньДерева + 1);
		КонецЕсли;
	Иначе												//Если не Ок, то возращаемся к Родителю
		Если Родитель <> "" Тогда
			СмотретьДерево(Родитель,,УровеньДерева - 1);  
		КонецЕсли;
	КонецЕсли;
КонецФункции	// СмотретьДерево(пТЗ)               

//---------------------------------------------------------------------------------
Процедура ПриОткрытии(ФлагВосстановленияНастройки)

	ДопПараметры = СоздатьОбъект("СписокЗначений"); 
	                                                                  
	лСпр = СоздатьОбъект("Справочник.ВидыСвойств"); 
	лСпр.НайтиПоКоду("00004");//Группы контрагентов
	ДопПараметры.ДобавитьЗначение(лСпр.ТекущийЭлемент(),"ТорговаяСеть");

	Фильтр.Установить("ЗагрузкаНастройки"	,1);
	Фильтр.Установить("ОписаниеФильтра"		,ОписаниеФильтра);
	Фильтр.Установить("ДопПараметры",ДопПараметры);
	
	ОткрытьФорму("Обработка.УстановкаФильтра",Контекст);
КонецПроцедуры  

//--------------------------------------------------------------------------------- 
Процедура ИзменениеПорядкаЭлементов(НаправлениеСдвига,пИмяСписка)
	
	Если пИмяСписка = "Группировка" Тогда
	
		ТекСтр = Группировка.ТекущаяСтрока();
		ПослСдвигСтр = Группировка.РазмерСписка();
		
		Если не((НаправлениеСдвига = 1) и (ТекСтр = ПослСдвигСтр)) Тогда
			Группировка.СдвинутьЗначение(НаправлениеСдвига, ТекСтр);
		КонецЕсли;
					
	ИначеЕсли пИмяСписка = "Ресурсы" Тогда
		ТекСтр = Ресурсы.ТекущаяСтрока();
		ПослСдвигСтр = Ресурсы.РазмерСписка();
		
		Если не((НаправлениеСдвига = 1) и (ТекСтр = ПослСдвигСтр)) Тогда
			Ресурсы.СдвинутьЗначение(НаправлениеСдвига, ТекСтр);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//--------------------------------------------------------------------------------- 
Процедура ПечатьГруппировки(пТЗ,пТаб,пУрГруппировки=1,пСортируемыеКолонки = "")
	Если пТЗ.ВидимостьКолонки("Группировка") = -1 Тогда
		Возврат;
    КонецЕсли;

	печРесурс = ""; 
	
	пТЗ.Сортировать(пСортируемыеКолонки);
	
	пТЗ.ВыбратьСтроки();
	Пока пТЗ.ПолучитьСтроку() = 1 Цикл
		печГруппировка = пТЗ.Группировка;  
		пп = пТЗ.НомерСтроки;
		
		лИмяСекции = "Гр"+(6 - МаксГруппировка + пУрГруппировки);
		Таб.ВывестиСекцию(лИмяСекции + "|ОснВертик");
		                
		ИмяРесурса = "";
		НаименованиеРесурса = "";
		Для сч = 1 По Ресурсы.РазмерСписка() Цикл
			Если Ресурсы.Пометка(сч) = 1 Тогда              
				ИмяРесурса = Ресурсы.ПолучитьЗначение(сч,НаименованиеРесурса);

				печРесурс = пТЗ.ПолучитьЗначение(пТЗ.НомерСтроки,ИмяРесурса);
				
				Если Лев(ИмяРесурса,3) = "прц" Тогда
					печРесурс = "" + Окр(печРесурс,1) + "%";
				Иначе
					печРесурс = Формат(печРесурс,"N019.2. ");
				КонецЕсли;
				
				Таб.ПрисоединитьСекцию(лИмяСекции + "|ВертикРесурс");
			КонецЕсли;
		КонецЦикла;
		
		Таб.ПрисоединитьСекцию(лИмяСекции + "|КонецВертикалке");
		
		Если пТЗ.ВидимостьКолонки("ТЗДетализация") <> -1 Тогда
			ПечатьГруппировки(пТЗ.ТЗДетализация,пТаб,пУрГруппировки+1,пСортируемыеКолонки);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры	// ПечатьГруппировки(лТЗ)

//--------------------------------------------------------------------------------- 
Процедура Печать(пТаблица,пСортируемыеКолонки = "")
	Если ПустоеЗначение(Таб)=1 Тогда
		Таб = СоздатьОбъект ("Таблица");
		Таб.ИсходнаяТаблица("Таблица");
	Иначе     
		Таб.Очистить();
	КонецЕсли;
          
	Если ПустоеЗначение(Фильтр.Получить("УсловияЗапроса")) = 0 Тогда
		СтроковоеПредставлениеФильтра = Фильтр.Получить("СтрЗагУсловия");
	Иначе
		СтроковоеПредставлениеФильтра = "";
	КонецЕсли;
	
	Таб.ВывестиСекцию ("Шапка");  
	
	//******Шапка таблицы 
	ИмяГруппировки = "";
	печГруппировка = "";
	Для сч = 1 По Группировка.РазмерСписка() Цикл
		Если Группировка.Пометка(сч) = 1 Тогда              
			Группировка.ПолучитьЗначение(сч,ИмяГруппировки);
			печГруппировка = печГруппировка + ИмяГруппировки + "/";
		КонецЕсли;
	КонецЦикла;

	Таб.ВывестиСекцию ("ШапкаТаблицы|ОснВертик");
	
	//**************************************
	
	ИмяРесурса = "";
	НаименованиеРесурса = "";
	Для сч = 1 По Ресурсы.РазмерСписка() Цикл
		Если Ресурсы.Пометка(сч) = 1 Тогда              
			ИмяРесурса = Ресурсы.ПолучитьЗначение(сч,НаименованиеРесурса);
			Таб.ПрисоединитьСекцию("ШапкаТаблицы|ВертикРесурс");
		КонецЕсли;
	КонецЦикла;
	
	Таб.ПрисоединитьСекцию("ШапкаТаблицы|КонецВертикалке");
	
 
	//******Сетка таблицы
	ПечатьГруппировки(пТаблица,Таб,,пСортируемыеКолонки);
	              
	//******Подвал таблицы 
	Таб.ВывестиСекцию ("Итого|ОснВертик");

	//**************************************
    
	Для сч = 1 По Ресурсы.РазмерСписка() Цикл
		Если Ресурсы.Пометка(сч) = 1 Тогда 
			печИтог = глТЗДерево.Итог(Ресурсы.ПолучитьЗначение(сч));
			печИтог = Формат(печИтог,"N019.2. ");
			
			Таб.ПрисоединитьСекцию("Итого|ВертикРесурс");
		КонецЕсли;
	КонецЦикла;
	
	Таб.ПрисоединитьСекцию("Итого|КонецВертикалке");
	//********************
	
	Таб.ТолькоПросмотр (1);                           
	Таб.ПараметрыСтраницы(2,,,,,,,,,1);//Ландшафт,Автомасштаб
	Таб.Опции(0,0,6,7,"ОпцииПечатиОтчета");
	Таб.Показать(НаименованиеОтчета);
КонецПроцедуры	// Печать(пТЗ)

//--------------------------------------------------------------------------------- 
Процедура Сформировать()   
    
	лЕстьГруппировка = 0;
	Для сч = 1 По Группировка.РазмерСписка() Цикл
		Если Группировка.Пометка(сч) = 1 Тогда
			лЕстьГруппировка = 1;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если лЕстьГруппировка = 0 Тогда
		Предупреждение ("Выберите группировку!",10);
		Возврат;
	КонецЕсли;
	
	лЕстьРесурсы = 0;
	Для сч = 1 По Ресурсы.РазмерСписка() Цикл
		Если Ресурсы.Пометка(сч) = 1 Тогда
			лЕстьРесурсы = 1;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если лЕстьРесурсы = 0 Тогда
		Предупреждение ("Выберите ресурс!",10);
		Возврат;
	КонецЕсли;	
	
	лТЗ = ПолучитьДанныеДляКомпоновки();
	Если лТЗ = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// Динамическое формирование списка группировок.
	спГруппировка = СоздатьОбъект("СписокЗначений");
	Для сч = 1 По Группировка.РазмерСписка() Цикл
		Если Группировка.Пометка(сч) = 1 Тогда
			спГруппировка.ДобавитьЗначение(Группировка.ПолучитьЗначение(сч));
		КонецЕсли;
	КонецЦикла; 
	МаксГруппировка = спГруппировка.РазмерСписка();
	
	// Динамическое формирование списка ресурсов.
	спРесурсыГрупп = СоздатьОбъект("СписокЗначений");
	Для сч = 1 По Ресурсы.РазмерСписка() Цикл
		Если Ресурсы.Пометка(сч) = 1 Тогда
			спРесурсыГрупп.ДобавитьЗначение(Ресурсы.ПолучитьЗначение(сч));
		КонецЕсли;
	КонецЦикла; 
		
	глТЗДерево = ЗагрузитьВДеревоТЗ(лТЗ,спГруппировка,спРесурсыГрупп);
	
	//СмотретьДерево(глТЗДерево);
	
	Печать(глТЗДерево);
	
КонецПроцедуры	// Сформировать

//---------------------------------------------------------------------------------
Процедура Инициализация()
	
	НаименованиеОтчета = "Ведомость по НДС";
	Форма.Заголовок(НаименованиеОтчета);
	
	Группировка.ДобавитьЗначение("Фирма", "Организация");
	Группировка.ДобавитьЗначение("ТорговаяСеть"	, "Торговая сеть");
	Группировка.ДобавитьЗначение("Контрагент"	, "Контрагент");
	Группировка.ДобавитьЗначение("Префикс"		, "Префикс");
	Группировка.ДобавитьЗначение("Регистратор"	, "Регистратор");
	Группировка.ДобавитьЗначение("Номенклатура"	, "Номенклатура");
	Группировка.Пометка(3,1);
	
	Ресурсы.ДобавитьЗначение("СуммаНДС18"		,"Сумма НДС 18%");
	Ресурсы.ДобавитьЗначение("СуммаНДС10"		,"Сумма НДС 10%");
	Ресурсы.ДобавитьЗначение("СуммаНДС"			,"Сумма НДС");
	Ресурсы.ДобавитьЗначение("СуммаБезНДС"		,"Сумма без НДС");

	Ресурсы.ДобавитьЗначение("СуммаНДС18_возвр"	,"Сумма НДС 18% (возвр)");
	Ресурсы.ДобавитьЗначение("СуммаНДС10_возвр"	,"Сумма НДС 10% (возвр)");
	Ресурсы.ДобавитьЗначение("СуммаНДС_возвр"	,"Сумма НДС (возвр)");
	Ресурсы.ДобавитьЗначение("СуммаБезНДС_возвр","Сумма без НДС (возвр)");
	
	//Для сч = 1 По Ресурсы.РазмерСписка() Цикл
	//	Ресурсы.Пометка(сч,1);
	//КонецЦикла;
	Ресурсы.Пометка(3,1);
	Ресурсы.Пометка(4,1);
	Ресурсы.Пометка(7,1);
	Ресурсы.Пометка(8,1);
	
	ОписаниеФильтра="Фирма			;Организация	;Справочник.Фирмы
					|ТорговаяСеть	;Сеть			;Справочник.ЗначенияСвойств
					|Контрагент		;Контрагенты	;Справочник.Контрагенты
					|Префикс		;Префикс		;Справочник.Префикс";
	
КонецПроцедуры	// Инициализация

//---------------------------------------------------------------------------------
Функция ПолучитьДанныеДляКомпоновки()
	
	//******** проверка корректности параметров ********
	Если (ПустоеЗначение(ВыбНачПериода) = 1 )или(ПустоеЗначение(ВыбКонПериода) = 1) Тогда
		Предупреждение("Укажите период отчета!",10);
		Возврат 0;
	КонецЕсли;
	
	Если ВыбНачПериода > ВыбНачПериода Тогда
		Предупреждение("Дата начала периода больше даты конца периода!",10);
		Возврат 0;
	КонецЕсли;  
	
//	//Очистка от пустых позиций
//	лТЗ.ВыбратьСтроки();
//	Пока лТЗ.ПолучитьСтроку()=1 Цикл
//		Пока (лТЗ.ПолучитьЗначение(лТЗ.НомерСтроки,"СуммаПродаж")=0)
//			и(лТЗ.ПолучитьЗначение(лТЗ.НомерСтроки,"ОбъёмПродаж")=0)  Цикл
//			лТЗ.УдалитьСтроку(); //следующая строка стала текущей                     
//			Если лТЗ.НомерСтроки = 0 Тогда
//				Прервать;
//			КонецЕсли;
//		КонецЦикла;
//	КонецЦикла;
	
	ЗФ1=Фильтр.Получить("ЗФ1");
	ЗФ2=Фильтр.Получить("ЗФ2");
	ЗФ3=Фильтр.Получить("ЗФ3");
	ЗФ4=Фильтр.Получить("ЗФ4");
	ЗФ5=Фильтр.Получить("ЗФ5");
	ЗФ6=Фильтр.Получить("ЗФ6");
	ЗФ7=Фильтр.Получить("ЗФ7");
	ЗФ8=Фильтр.Получить("ЗФ8");
	                            
	ТекстЗапроса = 
		"
		|Период с ВыбНачПериода по ВыбКонПериода;
		|Регистратор = 	Документ.Реализация.ТекущийДокумент, 
		|				Документ.ВозвратОтПокупателя.ТекущийДокумент;
		|Фирма = 		Документ.Реализация.Фирма, 
		|				Документ.ВозвратОтПокупателя.Фирма;
		|Номенклатура = Документ.Реализация.Номенклатура, 
		|				Документ.ВозвратОтПокупателя.Номенклатура;
		|Контрагент = 	Документ.Реализация.Контрагент, 
		|				Документ.ВозвратОтПокупателя.Контрагент;
		|ТорговаяСеть =	Документ.Реализация.Контрагент.ОсновноеСвойство.ЗначениеСвойства,
		|				Документ.ВозвратОтПокупателя.Контрагент.ОсновноеСвойство.ЗначениеСвойства;
		|Префикс = 		Документ.Реализация._МаршрутныйАдрес.Префикс, 
		|				Документ.ВозвратОтПокупателя._МаршрутныйАдрес.Префикс;
		|рзСтавкаНДС = 	Документ.Реализация.СтавкаНДС, 
		|				Документ.ВозвратОтПокупателя.СтавкаНДС; 
		|рзСуммаВклНДС =Документ.Реализация.СуммаВклНДС, 
		|				Документ.ВозвратОтПокупателя.СуммаВклНДС; 
		|рзСуммаНДС = 	Документ.Реализация.СуммаНДС, 
		|				Документ.ВозвратОтПокупателя.СуммаНДС;
		|рзСумма = 		Документ.Реализация.Сумма, 
		|				Документ.ВозвратОтПокупателя.Сумма;
		|
		|Функция СуммаНДС10 = Сумма(рзСуммаНДС) когда ((рзСтавкаНДС = Перечисление.СтавкиНДС.НДС10) и (Регистратор.Вид() = ""Реализация""));
		|Функция СуммаНДС18 = Сумма(рзСуммаНДС) когда ((рзСтавкаНДС = Перечисление.СтавкиНДС.НДС18) и (Регистратор.Вид() = ""Реализация""));
		|Функция СуммаНДС = Сумма(рзСуммаНДС) когда ((Регистратор.Вид() = ""Реализация""));
		//|Функция СуммаБезНДС = Сумма((рзСумма - (рзСуммаНДС * рзСуммаВклНДС))) когда (Регистратор.Вид() = ""Реализация"");
		|
		|Функция СуммаНДС10_возвр = Сумма(-1*рзСуммаНДС) когда ((рзСтавкаНДС = Перечисление.СтавкиНДС.НДС10) и (Регистратор.Вид() = ""ВозвратОтПокупателя""));
		|Функция СуммаНДС18_возвр = Сумма(-1*рзСуммаНДС) когда ((рзСтавкаНДС = Перечисление.СтавкиНДС.НДС18) и (Регистратор.Вид() = ""ВозвратОтПокупателя""));   
		|Функция СуммаНДС_возвр = Сумма(-1*рзСуммаНДС) когда ((Регистратор.Вид() = ""ВозвратОтПокупателя""));
		//|Функция СуммаБезНДС_возвр = Сумма((рзСумма - (рзСуммаНДС * рзСуммаВклНДС))) когда (Регистратор.Вид() = ""ВозвратОтПокупателя"");
		|
		|Функция СуммаВклНДС = Максимум(рзСуммаВклНДС);
		|Функция СуммаДок = Сумма(рзСумма) когда ((Регистратор.Вид() = ""Реализация""));
		|Функция СуммаДок_возвр = Сумма(-1*рзСумма) когда ((Регистратор.Вид() = ""ВозвратОтПокупателя""));
		|
		|Группировка Фирма;
		|Группировка Контрагент;
		|Группировка Префикс;
		|Группировка ТорговаяСеть;
		|Группировка Регистратор;
		|Группировка Номенклатура Без групп;
		|";

	ТекстЗапроса = ТекстЗапроса + Фильтр.Получить("УсловияЗапроса");
                                     
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат 0;
	КонецЕсли; 
	
	лРезультат = "";
	Запрос.Выгрузить(лРезультат,0,0);
	
	// Расчет суммы документа через выборку. Не мог добиться запросом.
	лРезультат.НоваяКолонка("СуммаБезНДС","Число");
	лРезультат.НоваяКолонка("СуммаБезНДС_возвр","Число");
	
	лРезультат.ВыбратьСтроки();
	Пока лРезультат.ПолучитьСтроку() = 1 Цикл
		//Если лРезультат.СуммаДок <> 0 Тогда
			лРезультат.СуммаБезНДС = лРезультат.СуммаДок - (лРезультат.СуммаНДС * лРезультат.СуммаВклНДС);
		//Иначе
			лРезультат.СуммаБезНДС_возвр = лРезультат.СуммаДок_возвр - (лРезультат.СуммаНДС_возвр * лРезультат.СуммаВклНДС);
		//КонецЕсли;
	КонецЦикла;
	
	Возврат лРезультат;
КонецФункции

//---------------------------------------------------------------------------------
//---------------------------------------------------------------------------------
//---------------------------------------------------------------------------------

Инициализация();
