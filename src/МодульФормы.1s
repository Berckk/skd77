Перем 
	ОписаниеФильтра,ЗФ1,ЗФ2,ЗФ3,ЗФ4,ЗФ5,ЗФ6, ЗФ7, ЗФ8,	// для универсального фильтра     
	глТЗДерево,
	Таб,
	МаксГруппировка;//Для хранения числа группировок. Для оформления группировочных строк в таблице.
	
Процедура Печать(пТаблица,пСортируемыеКолонки = "") Далее
	
//--------------------------------------------------------------------------------- 
Функция ВыборСортировки(пИмяПоказателя)
	Сп = СоздатьОбъект("СписокЗначений");
	//Сп.ДобавитьЗначение(пТовар,"Товар");
	Сп.ДобавитьЗначение(пИмяПоказателя,"Показатель");
	Возврат Сп;
КонецФункции	// ВыборСортировки 	
            
//--------------------------------------------------------------------------------- 
Процедура ОбработкаЯчейкиТаблицы(пЗначение,пФлагСтандОбраб,пТаблица,пАдрес)
	Перем ВыбЗнач;
	
	Если ТипЗначенияСтр(пЗначение) = "СписокЗначений" Тогда
		Сп = СоздатьОбъект("СписокЗначений");
		//Сп.ДобавитьЗначение("Открыть","Открыть карточку");
		Сп.ДобавитьЗначение("Сорт+","Сортировать по возр.");
		Сп.ДобавитьЗначение("Сорт-","Сортировать по убыв.");

		Если Сп.ВыбратьЗначение(ВыбЗнач,,,,1) = 1 Тогда
			//СортируемыеКолонки = "";
			ИмяПоказателя = пЗначение.Получить("Показатель");
			СортируемыеКолонки = ИмяПоказателя;

			//глТЗДерево.Сортировать(СортируемыеКолонки + ?(ВыбЗнач = "Сорт+","+","-"));
			Печать(глТЗДерево,СортируемыеКолонки + ?(ВыбЗнач = "Сорт+","+","-"));
		КонецЕсли;
	Иначе
		пФлагСтандОбраб =1;	
	КонецЕсли;
КонецПроцедуры


//--------------------------------------------------------------------------------- 
Функция ОбновитьФорму()
	//ПозНоменклатура = Группировка.НайтиЗначение("Номенклатура");
	//лНоменклатураЕсть = Группировка.Пометка(ПозНоменклатура);
	//
	//лВыбТипЦенЕсть = 1- ПустоеЗначение(ВыбТипЦен);
	//лДоступностьПоказателейЦен = ?((лВыбТипЦенЕсть=1)и(лНоменклатураЕсть = 1),1,0);
	//
	//Форма.ВыбТипЦен.Доступность(лНоменклатураЕсть);
	//Форма.флПодгруппа.Доступность(лНоменклатураЕсть);
	//Форма.флСрокГодности.Доступность(лНоменклатураЕсть);
	//Форма.флСтавкаНДС.Доступность(лНоменклатураЕсть);
	//Форма.флСуммаНДС.Доступность(лДоступностьПоказателейЦен);
	//Форма.флЦенаБезНДС.Доступность(лДоступностьПоказателейЦен);
	//Форма.флЦенаСНДС.Доступность(лДоступностьПоказателейЦен);
КонецФункции	// ОбновитьФорму

//--------------------------------------------------------------------------------- 
Функция ЗагрузитьВДеревоТЗ(Знач пТЗ,пГруппировка,Знач пРесурсыГрупп)
	
	Если пТЗ.КоличествоСтрок() = 0 Тогда
		Возврат пТЗ;
	КонецЕсли;
	
	лТЗ = СоздатьОбъект("ТаблицаЗначений");
	лГруппировки = СоздатьОбъект("СписокЗначений");
	пГруппировка.Выгрузить(лГруппировки);

	Если лГруппировки.РазмерСписка()>0 Тогда        
		ИмяКолонки = лГруппировки.ПолучитьЗначение(1);
		лГруппировки.УдалитьЗначение(1);
		                           
		пТЗ.Сортировать(ИмяКолонки);
		
		лТЗ.НоваяКолонка("Группировка");
		лТЗ.НоваяКолонка("ИмяГруппировки");
		лТЗ.НоваяКолонка("ТЗДетализация","ТаблицаЗначений"); 
		              
		КолВоРесурсов = пРесурсыГрупп.РазмерСписка();
		Для Сч = 1 По КолВоРесурсов Цикл
			ИмяРесурса = пРесурсыГрупп.ПолучитьЗначение(Сч);
			лТЗ.НоваяКолонка(ИмяРесурса,"Число"); 
		КонецЦикла;
	Иначе            
		Возврат пТЗ;	//Детализация
	КонецЕсли;

	НомерНачСтроки = 1;
	НомерКонСтроки = 1;
	
	СчСтрок = 1;
	            
	Пока 1=1 Цикл
		ТекЗначГруппировки = пТЗ.ПолучитьЗначение(СчСтрок,ИмяКолонки);
		
		НомерКонСтроки = СчСтрок;
		
		Если СчСтрок = пТЗ.КоличествоСтрок() Тогда
			СледЗначениеГруппировки = "!№;%:?*()";
		Иначе
			СледЗначениеГруппировки = пТЗ.ПолучитьЗначение(СчСтрок+1,ИмяКолонки);
		КонецЕсли;
			
			
		Если (ТекЗначГруппировки<>СледЗначениеГруппировки) Тогда   
			
			лВыгрузка = СоздатьОбъект("ТаблицаЗначений");
			пТЗ.Выгрузить(лВыгрузка,НомерНачСтроки,НомерКонСтроки); 
			
			лВыгрузка.УдалитьКолонку(ИмяКолонки);
			           
			лТЗ.НоваяСтрока();          
			лТЗ.Группировка = ?(ПустоеЗначение(ТекЗначГруппировки)=1,"<"+ИмяКолонки+": ПУСТОЕ ЗНАЧЕНИЕ>",ТекЗначГруппировки);              
			лТЗ.ИмяГруппировки = ИмяКолонки;     
		                  
			лТЗ.ТЗДетализация = ЗагрузитьВДеревоТЗ(лВыгрузка,лГруппировки,пРесурсыГрупп);
			           
			//Расчет суммы по ресурсам.
			Для Сч = 1 По КолВоРесурсов Цикл
				ИмяРесурса = пРесурсыГрупп.ПолучитьЗначение(Сч);
				
				Если (Лев(ИмяРесурса,4)="сред") Тогда //Расчёт среднего
					лИмяРесурса = Сред(ИмяРесурса,5);
					лТЗ.УстановитьЗначение(лТЗ.НомерСтроки,ИмяРесурса,лТЗ.ТЗДетализация.Итог(лИмяРесурса)/лТЗ.ТЗДетализация.КоличествоСтрок());   
				ИначеЕсли (Лев(ИмяРесурса,3)<>"прц") Тогда	//Расчет доли и среднего по особому	и 
					лТЗ.УстановитьЗначение(лТЗ.НомерСтроки,ИмяРесурса,лТЗ.ТЗДетализация.Итог(ИмяРесурса));   
				КонецЕсли;
			КонецЦикла;			
			
			НомерНачСтроки = СчСтрок+1;
		КонецЕсли;
			
		НомерКонСтроки = СчСтрок;
		СчСтрок = СчСтрок + 1;
		
		Если СчСтрок>пТЗ.КоличествоСтрок() Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла; 
	
	//Расчет долей ресурсов
	Для Сч = 1 По КолВоРесурсов Цикл
		ИмяРесурса = пРесурсыГрупп.ПолучитьЗначение(Сч);
		
		Если Лев(ИмяРесурса,3)="прц" Тогда
			ИмяРесурсаДляРасчетаДоли = Сред(ИмяРесурса,4);
			
			лТЗ.ВыбратьСтроки();
			Пока лТЗ.ПолучитьСтроку() = 1 Цикл       
				ЗначениеРасчетногоРесурса = лТЗ.ПолучитьЗначение(лТЗ.НомерСтроки,ИмяРесурсаДляРасчетаДоли);
				ЗначениеДоли = ?(лТЗ.Итог(ИмяРесурсаДляРасчетаДоли)<>0,ЗначениеРасчетногоРесурса/лТЗ.Итог(ИмяРесурсаДляРасчетаДоли)*100,0);
				лТЗ.УстановитьЗначение(лТЗ.НомерСтроки,ИмяРесурса,ЗначениеДоли);   
			КонецЦикла;                     
			
		ИначеЕсли Лев(ИмяРесурса,4)="сред" Тогда             
			ИмяРесурсаДляРасчетаСреднего = Сред(ИмяРесурса,5);

			лТЗ.ВыбратьСтроки();
			Пока лТЗ.ПолучитьСтроку() = 1 Цикл       
				//ЗначениеРасчетногоПоказателя = лТЗ.ПолучитьЗначение(лТЗ.НомерСтроки,ИмяПоказателяДляРасчетаДоли);
				//ЗначениеДоли = ?(лТЗ.Итог(ИмяПоказателяДляРасчетаДоли)<>0,ЗначениеРасчетногоПоказателя/лТЗ.Итог(ИмяПоказателяДляРасчетаДоли)*100,0);
				//лЗНачение = 1;
				//лТЗ.УстановитьЗначение(лТЗ.НомерСтроки,ИмяПоказателя,лЗначение);   
			КонецЦикла;                     
		КонецЕсли;
	КонецЦикла;			
	
	Возврат лТЗ;          
КонецФункции 

//--------------------------------------------------------------------------------
Функция СмотретьДерево(пТЗ,Родитель = "",УровеньДерева = 1)  
	//Печатаем перемещения
	Если УровеньДерева = 2 Тогда   
		//ПеремещениеНасыщениеАртикульности(пТЗ,"",1);
	КонецЕсли;
	
	ВыбраннаяСтрока = 0;
	Если пТЗ.ВыбратьСтроку(ВыбраннаяСтрока) = 1 Тогда	//Если Ок, то заходим в Детализацию
		Если пТЗ.ВидимостьКолонки("ТЗДетализация") <> -1 Тогда
			пТЗ.ПолучитьСтрокуПоНомеру(ВыбраннаяСтрока);
			СмотретьДерево(пТЗ.ТЗДетализация,пТЗ,УровеньДерева + 1);
		КонецЕсли;
	Иначе												//Если не Ок, то возращаемся к Родителю
		Если Родитель <> "" Тогда
			СмотретьДерево(Родитель,,УровеньДерева - 1);  
		КонецЕсли;
	КонецЕсли;
КонецФункции	// СмотретьДерево(пТЗ)               

//---------------------------------------------------------------------------------
Процедура ПриОткрытии(ФлагВосстановленияНастройки)
	Если ФлагВосстановленияНастройки = 0 Тогда
		флПродажиВозвраты = 2;
	КонецЕсли;
	
	ДопПараметры = СоздатьОбъект("СписокЗначений"); 
	                                                                  
	лСпр = СоздатьОбъект("Справочник.ВидыСвойств"); 
	лСпр.НайтиПоКоду("00004");//Группы контрагентов
	ДопПараметры.ДобавитьЗначение(лСпр.ТекущийЭлемент(),"ТорговаяСеть");

	Фильтр.Установить("ЗагрузкаНастройки"	,1);
	Фильтр.Установить("ОписаниеФильтра"		,ОписаниеФильтра);
	Фильтр.Установить("ДопПараметры",ДопПараметры);
	
	ОткрытьФорму("Обработка.УстановкаФильтра",Контекст);
КонецПроцедуры  

//--------------------------------------------------------------------------------- 
Процедура ИзменениеПорядкаГрупп(НаправлениеСдвига)
	ТекСтр = Группировка.ТекущаяСтрока();
	ПослСдвигСтр = Группировка.РазмерСписка() - 1;
	Если ТекСтр <= ПослСдвигСтр Тогда
		Если не((НаправлениеСдвига = 1) и (ТекСтр = ПослСдвигСтр)) Тогда
			Группировка.СдвинутьЗначение(НаправлениеСдвига, ТекСтр);
		КонецЕсли;
	Иначе
		Предупреждение("Группировка ""По документам движения"" всегда находится
		               |в конце списка и не перемещается.",60);
	КонецЕсли;
КонецПроцедуры

//--------------------------------------------------------------------------------- 
Процедура ПечатьГруппировки(пТЗ,пТаб,пУрГруппировки=1,пСортируемыеКолонки = "")
	Если пТЗ.ВидимостьКолонки("Группировка") = -1 Тогда
		Возврат;
    КонецЕсли;

	печПодгруппа = "";
	печЦена = "";
	печРесурс = ""; 
	печСрокГодности = "";
	
	пТЗ.Сортировать(пСортируемыеКолонки);
	
	пТЗ.ВыбратьСтроки();
	Пока пТЗ.ПолучитьСтроку() = 1 Цикл
		печГруппировка = пТЗ.Группировка;  
		пп = пТЗ.НомерСтроки;
		
		лИмяСекции = "Гр"+(6 - МаксГруппировка + пУрГруппировки);
		Таб.ВывестиСекцию(лИмяСекции + "|ОснВертик");
		                
		// Доп. реквизиты для группировки 1
		Если пТЗ.ИмяГруппировки = "Группировка1" Тогда
			Если флГруппировка1ДопРеквизит1 = 1 Тогда
				печЦена = глФРМ(999);
				Таб.ПрисоединитьСекцию(лИмяСекции + "|ВертикДопКолонка");
			КонецЕсли;
		
			Если флГруппировка1ДопРеквизит2 = 1 Тогда
				печЦена = глФРМ(999);
				Таб.ПрисоединитьСекцию(лИмяСекции + "|ВертикДопКолонка");
			КонецЕсли;                              
			
			//**************************************
			
		Иначе
			Если флГруппировка1ДопРеквизит1 = 1 Тогда
				Таб.ПрисоединитьСекцию(лИмяСекции + "|ВертикДопКолонка");
			КонецЕсли;
		
			Если флГруппировка1ДопРеквизит1 = 1 Тогда
				Таб.ПрисоединитьСекцию(лИмяСекции + "|ВертикДопКолонка");
			КонецЕсли;
			
			//**************************************
		КонецЕсли;
	                      
		ИмяРесурса = "";
		НаименованиеРесурса = "";
		Для сч = 1 По Ресурсы.РазмерСписка() Цикл
			Если Ресурсы.Пометка(сч) = 1 Тогда              
				ИмяРесурса = Ресурсы.ПолучитьЗначение(сч,НаименованиеРесурса);

				печРесурс = пТЗ.ПолучитьЗначение(пТЗ.НомерСтроки,ИмяРесурса);
				
				Если Лев(ИмяРесурса,3) = "прц" Тогда
					печРесурс = "" + Окр(печРесурс,1) + "%";
				ИначеЕсли ИмяРесурса = "ОбъёмПродаж" Тогда
					печРесурс = Формат(печРесурс,"N019.3. ");
				Иначе
					печРесурс = Формат(печРесурс,"N019.2. ");
				КонецЕсли;
				
				Таб.ПрисоединитьСекцию(лИмяСекции + "|ВертикРесурс");
			КонецЕсли;
		КонецЦикла;
		
		Таб.ПрисоединитьСекцию(лИмяСекции + "|КонецВертикалке");

		
		Если пТЗ.ВидимостьКолонки("ТЗДетализация") <> -1 Тогда
			ПечатьГруппировки(пТЗ.ТЗДетализация,пТаб,пУрГруппировки+1,пСортируемыеКолонки);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры	// ПечатьГруппировки(лТЗ)

//--------------------------------------------------------------------------------- 
Процедура Печать(пТаблица,пСортируемыеКолонки = "")
	Если ПустоеЗначение(Таб)=1 Тогда
		Таб = СоздатьОбъект ("Таблица");  
	Иначе     
		Таб.Очистить();
	КонецЕсли;
          
	Если ПустоеЗначение(Фильтр.Получить("УсловияЗапроса")) = 0 Тогда
		СтроковоеПредставлениеФильтра = Фильтр.Получить("СтрЗагУсловия");
	Иначе
		СтроковоеПредставлениеФильтра = "";
	КонецЕсли;
	
	Таб.ВывестиСекцию ("Шапка");  
	
	//******Шапка таблицы 
	ИмяГруппировки = "";
	печГруппировка = "";
	Для сч = 1 По Группировка.РазмерСписка() Цикл
		Если Группировка.Пометка(сч) = 1 Тогда              
			Группировка.ПолучитьЗначение(сч,ИмяГруппировки);
			печГруппировка = печГруппировка + ИмяГруппировки + "/";
		КонецЕсли;
	КонецЦикла;

	//печРесурс = "";
	Таб.ВывестиСекцию ("ШапкаТаблицы|ОснВертик");
	
	Если флГруппировка1ДопРеквизит1 = 1 Тогда
		печДопКолонка = "Группировка1.Код";
		Таб.ПрисоединитьСекцию("ШапкаТаблицы|ВертикДопКолонка");
	КонецЕсли;

	Если флГруппировка1ДопРеквизит2 = 1 Тогда
		печДопКолонка = "Группировка2.Наименование";
		Таб.ПрисоединитьСекцию("ШапкаТаблицы|ВертикДопКолонка");
	КонецЕсли;
	//**************************************
	
	ИмяРесурса = "";
	НаименованиеРесурса = "";
	Для сч = 1 По Ресурсы.РазмерСписка() Цикл
		Если Ресурсы.Пометка(сч) = 1 Тогда              
			ИмяРесурса = Ресурсы.ПолучитьЗначение(сч,НаименованиеРесурса);
			Таб.ПрисоединитьСекцию("ШапкаТаблицы|ВертикРесурс");
		КонецЕсли;
	КонецЦикла;
	
	Таб.ПрисоединитьСекцию("ШапкаТаблицы|КонецВертикалке");
	
 
	//******Сетка таблицы
	ПечатьГруппировки(пТаблица,Таб,,пСортируемыеКолонки);
	              
	//******Подвал таблицы 
	Таб.ВывестиСекцию ("Итого|ОснВертик");

	Если флГруппировка1ДопРеквизит1 = 1 Тогда
		Таб.ПрисоединитьСекцию("Итого|ВертикДопКолонка");
	КонецЕсли;

	Если флГруппировка1ДопРеквизит2 = 1 Тогда
		Таб.ПрисоединитьСекцию("Итого|ВертикДопКолонка");
	КонецЕсли;

	//**************************************
    
	Для сч = 1 По Ресурсы.РазмерСписка() Цикл
		Если Ресурсы.Пометка(сч) = 1 Тогда 
			Если Ресурсы.ПолучитьЗначение(сч) = "Показатель1" Тогда
				печИтог = глТЗДерево.Итог("Показатель1"); 
				печИтог = Формат(печИтог,"N019.2. ");
			Иначе
				печИтог = "";
			КонецЕсли;
			
			Таб.ПрисоединитьСекцию("Итого|ВертикРесурс");
		КонецЕсли;
	КонецЦикла;
	
	Таб.ПрисоединитьСекцию("Итого|КонецВертикалке");
	//********************
	
	Таб.ТолькоПросмотр (1);                           
	Таб.ПараметрыСтраницы(2,,,,,,,,,1);//Ландшафт,Автомасштаб
	Таб.Опции(0,0,0,0,"ОпцииПечатиОтчета");
	Таб.Показать("Наименование отчета");
КонецПроцедуры	// Печать(пТЗ) 

//--------------------------------------------------------------------------------- 
Процедура ДобавитьДанныеДляРасчетаПросроченнойДебиторки(пТЗ)
	
	пТЗ.ВыбратьСтроки();
	
	Пока пТЗ.ПолучитьСтроку() = 1 Цикл
		
	КонецЦикла;
	
	
КонецПроцедуры	// ДобавитьДанныеДляРасчетаПросроченнойДебиторки

//--------------------------------------------------------------------------------- 
Процедура Сформировать()   
	//******** проверка корректности параметров ********
	Если (ПустоеЗначение(ВыбНачПериода) = 1 )или(ПустоеЗначение(ВыбКонПериода) = 1) Тогда
		Предупреждение("Укажите период отчета!",10);
		Возврат;
	КонецЕсли;
	
	Если ВыбНачПериода > ВыбНачПериода Тогда
		Предупреждение("Дата начала периода больше даты конца периода!",10);
		Возврат;
	КонецЕсли;  
    
	лЕстьГруппировка = 0;
	Для сч = 1 По Группировка.РазмерСписка() Цикл
		Если Группировка.Пометка(сч) = 1 Тогда
			лЕстьГруппировка = 1;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если лЕстьГруппировка = 0 Тогда
		Предупреждение ("Должна быть установлена хоть одна группировка!",10);
		Возврат;
	КонецЕсли;
	
	//**************************************************
	
	ЗФ1=Фильтр.Получить("ЗФ1");
	ЗФ2=Фильтр.Получить("ЗФ2");
	ЗФ3=Фильтр.Получить("ЗФ3");
	ЗФ4=Фильтр.Получить("ЗФ4");
	ЗФ5=Фильтр.Получить("ЗФ5");
	ЗФ6=Фильтр.Получить("ЗФ6");
	ЗФ7=Фильтр.Получить("ЗФ7");
	ЗФ8=Фильтр.Получить("ЗФ8");
	                            
	ТекстЗапроса =	"
		|Период с ВыбКонПериода по ВыбКонПериода;
		|Договор = Регистр.Покупатели.Договор;
		|Контрагент = Регистр.Покупатели.Договор.Владелец;
		|пзСуммаУпр = Регистр.Покупатели.СуммаУпр;
		//==============Группировка==============
		|Группировка Договор;                                        
		//==============Функции==============  
		|Функция СуммаЗадолженности = КонОст(пзСуммаУпр);
		|";        

	ТекстЗапроса = ТекстЗапроса + Фильтр.Получить("УсловияЗапроса");
        
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	//Сообщить("Запрос: " + ТекущееВремя());
	
	лТЗ = "";
	Запрос.Выгрузить(лТЗ,1,0);
	
	// Отбор "Только с задолженностью"
	лТЗ.ВыбратьСтроки();
	Пока лТЗ.ПолучитьСтроку()=1 Цикл
		Пока (лТЗ.ПолучитьЗначение(лТЗ.НомерСтроки,"СуммаЗадолженности") <= 0) Цикл
			лТЗ.УдалитьСтроку(); //следующая строка стала текущей                     
			Если лТЗ.НомерСтроки = 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
         
	лТЗ.Сортировать("СуммаЗадолженности");
	лТЗ.ВыбратьСтроку();
	
	ДобавитьДанныеДляРасчетаПросроченнойДебиторки(лТЗ);
	
	Возврат;
					   
	 
	//===================Группировочное дерево
	спГруппировка = СоздатьОбъект("СписокЗначений");
	//спГруппировка.ИзСтрокиСРазделителями("""Проект"",""Префикс"",""МаршАдрес"",""Контрагент"",""ТорговаяСеть""");
                                                                                
	// Динамическое формирование описания группировки.
	Для сч = 1 По Группировка.РазмерСписка() Цикл
		Если Группировка.Пометка(сч) = 1 Тогда
			спГруппировка.ДобавитьЗначение(Группировка.ПолучитьЗначение(сч));
		КонецЕсли;
	КонецЦикла; 
	МаксГруппировка = спГруппировка.РазмерСписка();
	
	спРесурсыГрупп = СоздатьОбъект("СписокЗначений");
	спРесурсыГрупп.ИзСтрокиСРазделителями("""Показатель1"",""Показатель2"",""прцПоказатель1"",""средПоказатель1""");
	
	                          
	глТЗДерево = ЗагрузитьВДеревоТЗ(лТЗ,спГруппировка,спРесурсыГрупп);
	//Сообщить("Дерево: " + ТекущееВремя());
	
	//глТЗДерево.Сортировать("СуммаРеализация");
	//СмотретьДерево(глТЗДерево);
                         
	
	Печать(глТЗДерево);
	
КонецПроцедуры	// Сформировать

//---------------------------------------------------------------------------------
//---------------------------------------------------------------------------------
//---------------------------------------------------------------------------------

Группировка.ДобавитьЗначение("Контрагент", "Контрагент");
Группировка.ДобавитьЗначение("Договор", "Договор");
Группировка.ДобавитьЗначение("Регистратор", "Регистратор");

Ресурсы.ДобавитьЗначение("СуммаДолга","Сумма долга");
Ресурсы.ДобавитьЗначение("СуммаПросрочки","Просрочка (руб.)");
//Ресурсы.ДобавитьЗначение("ДнейПросрочки","Просрочка (дней)");

//Ресурсы.ДобавитьЗначение("прцПоказатель1","Доля показателя 1");
//Ресурсы.ДобавитьЗначение("средПоказатель1","Показатель №1 (сред)");

ОписаниеФильтра="Контрагент		;Контрагенты	;Справочник.Контрагенты";
				//|ТорговаяСеть	;Сеть			;Справочник.ЗначенияСвойств
