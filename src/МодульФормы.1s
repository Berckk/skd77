Перем 
	ОписаниеФильтра,ЗФ1,ЗФ2,ЗФ3,ЗФ4,ЗФ5,ЗФ6, ЗФ7, ЗФ8,	// для универсального фильтра     
	глТЗДерево,
	Таб,
	МаксГруппировка,//Для хранения числа группировок. Для оформления группировочных строк в таблице.
	РежимОтладки,      	
	ТаблицаЦен;	//	для хранения цен товара и быстрого доступа к ним. 
     
	
Процедура Печать(пТаблица,пСортируемыеКолонки = "") Далее
	
//--------------------------------------------------------------------------------- 
Функция ВыборСортировки(пИмяПоказателя)
	Сп = СоздатьОбъект("СписокЗначений");
	//Сп.ДобавитьЗначение(пТовар,"Товар");
	Сп.ДобавитьЗначение(пИмяПоказателя,"Показатель");
	Возврат Сп;
КонецФункции	// ВыборСортировки 	
            
//--------------------------------------------------------------------------------- 
Процедура ОбработкаЯчейкиТаблицы(пЗначение,пФлагСтандОбраб,пТаблица,пАдрес)
	Перем ВыбЗнач;
	
	Если ТипЗначенияСтр(пЗначение) = "СписокЗначений" Тогда
		Сп = СоздатьОбъект("СписокЗначений");
		//Сп.ДобавитьЗначение("Открыть","Открыть карточку");
		Сп.ДобавитьЗначение("Сорт+","Сортировать по возр.");
		Сп.ДобавитьЗначение("Сорт-","Сортировать по убыв.");

		Если Сп.ВыбратьЗначение(ВыбЗнач,,,,1) = 1 Тогда
			//СортируемыеКолонки = "";
			ИмяПоказателя = пЗначение.Получить("Показатель");
			СортируемыеКолонки = ИмяПоказателя;

			//глТЗДерево.Сортировать(СортируемыеКолонки + ?(ВыбЗнач = "Сорт+","+","-"));
			Печать(глТЗДерево,СортируемыеКолонки + ?(ВыбЗнач = "Сорт+","+","-"));
		КонецЕсли;
	Иначе
		пФлагСтандОбраб =1;	
	КонецЕсли;
КонецПроцедуры


//--------------------------------------------------------------------------------- 
Процедура ЗаполнитьТаблицуЦен()   
	ТаблицаЦен.УдалитьСтроки();   
	
	Если ПустоеЗначение(ВыбТипЦен) = 1 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = СоздатьОбъект("Запрос"); 
	лПорядокОкругления = ВыбТипЦен.ПорядокОкругления;
	
	         
	Если ВыбТипЦен.Рассчитывается = 1 Тогда
		лВыбТипЦен = ВыбТипЦен.БазовыйТипЦен;
		лПроц = ВыбТипЦен.Процент/100+1;
	Иначе                      
		лВыбТипЦен = ВыбТипЦен;
	КонецЕсли;
		
		ТекстЗапроса = 
			"//{{ЗАПРОС(Сформировать)
			|ТекущийЭлемент = Справочник.Цены.ТекущийЭлемент;
			|ТипЦен = Справочник.Цены.ТипЦен;
			|врЦена = Справочник.Цены.Цена;
			|Товар = Справочник.Цены.Владелец;
			|СтавкаНДС = Справочник.Цены.Владелец.СтавкаНДС;
			|Функция Цена = Максимум(глОкруглить(врЦена"+?(ВыбТипЦен.Рассчитывается=1,"*лПроц","")+",лПорядокОкругления));
			|Группировка Товар без групп;
			|Условие(ТипЦен = лВыбТипЦен);
			|";
	
		
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;        
	
	//Запрос.Выгрузить(ТаблицаЦен,0,0);  
	
	Пока Запрос.Группировка("Товар") = 1 Цикл
		ТаблицаЦен.НоваяСтрока();
		ТаблицаЦен.Товар = Запрос.Товар;
		ТаблицаЦен.Цена = Запрос.Цена;
		ТаблицаЦен.СтавкаНДС = Запрос.СтавкаНДС;
		                          
		Если лВыбТипЦен.ЦенаВклНДС=1 Тогда
			ТаблицаЦен.ЦенаСНДС	=	Запрос.Цена;
			ТаблицаЦен.ЦенаБезНДС = Запрос.Цена-(Запрос.Цена*глВыделяемыйНДС(Запрос.СтавкаНДС));
		Иначе
			ТаблицаЦен.ЦенаБезНДС	=	Запрос.Цена;
			ТаблицаЦен.ЦенаСНДС = Запрос.Цена+(Запрос.Цена*глВыделяемыйНДС(Запрос.СтавкаНДС));
		КонецЕсли;
		
		ТаблицаЦен.СуммаНДС = ТаблицаЦен.ЦенаСНДС - ТаблицаЦен.ЦенаБезНДС;

		
		//	ПечЦена	= глФРМ(Цена, ТаблицаЦен.Валюта);
		
	КонецЦикла;
	
	//ТаблицаЦен.ВыбратьСтроку();
КонецПроцедуры	// ЗаполнитьТаблицуЦен

//--------------------------------------------------------------------------------- 
Функция ОбновитьФорму()
	//ПозНоменклатура = Группировка.НайтиЗначение("Номенклатура");
	//лНоменклатураЕсть = Группировка.Пометка(ПозНоменклатура);
	//
	//лВыбТипЦенЕсть = 1- ПустоеЗначение(ВыбТипЦен);
	//лДоступностьПоказателейЦен = ?((лВыбТипЦенЕсть=1)и(лНоменклатураЕсть = 1),1,0);
	//
	//Форма.ВыбТипЦен.Доступность(лНоменклатураЕсть);
	//Форма.флПодгруппа.Доступность(лНоменклатураЕсть);
	//Форма.флСрокГодности.Доступность(лНоменклатураЕсть);
	//Форма.флСтавкаНДС.Доступность(лНоменклатураЕсть);
	//Форма.флСуммаНДС.Доступность(лДоступностьПоказателейЦен);
	//Форма.флЦенаБезНДС.Доступность(лДоступностьПоказателейЦен);
	//Форма.флЦенаСНДС.Доступность(лДоступностьПоказателейЦен);
КонецФункции	// ОбновитьФорму

//--------------------------------------------------------------------------------- 
Функция ЗагрузитьВДеревоТЗ(Знач пТЗ,пГруппировка,Знач пПоказателиГрупп)
	Перем НеВажно;                       
	
	Если пТЗ.КоличествоСтрок() = 0 Тогда
		Возврат пТЗ;
	КонецЕсли;
	
	лТЗ = СоздатьОбъект("ТаблицаЗначений");
	лГруппировки = СоздатьОбъект("СписокЗначений");
	пГруппировка.Выгрузить(лГруппировки);

	Если лГруппировки.РазмерСписка()>0 Тогда        
		ИмяКолонки = лГруппировки.ПолучитьЗначение(1,НеВажно);
		лГруппировки.УдалитьЗначение(1);
		                           
		пТЗ.Сортировать(ИмяКолонки);
		
		лТЗ.НоваяКолонка("Группировка");
		лТЗ.НоваяКолонка("ИмяГруппировки");
		лТЗ.НоваяКолонка("ТЗДетализация","ТаблицаЗначений"); 
		              
		КолВоПоказателей = пПоказателиГрупп.РазмерСписка();
		Для Сч = 1 По КолВоПоказателей Цикл
			ИмяПоказателя = пПоказателиГрупп.ПолучитьЗначение(Сч,НеВажно);
			лТЗ.НоваяКолонка(ИмяПоказателя,"Число"); 
		КонецЦикла;
	Иначе            
		Возврат пТЗ;	//Детализация
	КонецЕсли;

	НомерНачСтроки = 1;
	НомерКонСтроки = 1;
	
	СчСтрок = 1;
	            
	Пока 1=1 Цикл
		ТекЗначГруппировки = пТЗ.ПолучитьЗначение(СчСтрок,ИмяКолонки);
		
		НомерКонСтроки = СчСтрок;
		
		Если СчСтрок = пТЗ.КоличествоСтрок() Тогда
			СледЗначениеГруппировки = "!№;%:?*()";
		Иначе
			СледЗначениеГруппировки = пТЗ.ПолучитьЗначение(СчСтрок+1,ИмяКолонки);
		КонецЕсли;
			
			
		Если (ТекЗначГруппировки<>СледЗначениеГруппировки) Тогда   
			
			лВыгрузка = СоздатьОбъект("ТаблицаЗначений");
			пТЗ.Выгрузить(лВыгрузка,НомерНачСтроки,НомерКонСтроки); 
			
			лВыгрузка.УдалитьКолонку(ИмяКолонки);
			           
			лТЗ.НоваяСтрока();          
			лТЗ.Группировка = ?(ПустоеЗначение(ТекЗначГруппировки)=1,"<"+ИмяКолонки+": ПУСТОЕ ЗНАЧЕНИЕ>",ТекЗначГруппировки);              
			лТЗ.ИмяГруппировки = ИмяКолонки;     
		                  
			лТЗ.ТЗДетализация = ЗагрузитьВДеревоТЗ(лВыгрузка,лГруппировки,пПоказателиГрупп);
			           
			//Расчет суммы по показателям.
			Для Сч = 1 По КолВоПоказателей Цикл
				ИмяПоказателя = пПоказателиГрупп.ПолучитьЗначение(Сч,НеВажно);
				
				Если (Лев(ИмяПоказателя,4)="сред") Тогда //Расчёт среднего
					лИмяПоказателя = Сред(ИмяПоказателя,5);
					лТЗ.УстановитьЗначение(лТЗ.НомерСтроки,ИмяПоказателя,лТЗ.ТЗДетализация.Итог(лИмяПоказателя)/лТЗ.ТЗДетализация.КоличествоСтрок());   
				ИначеЕсли (Лев(ИмяПоказателя,3)<>"прц") Тогда	//Расчет доли и среднего по особому	и 
					лТЗ.УстановитьЗначение(лТЗ.НомерСтроки,ИмяПоказателя,лТЗ.ТЗДетализация.Итог(ИмяПоказателя));   
				КонецЕсли;
			КонецЦикла;			
			
			НомерНачСтроки = СчСтрок+1;
		КонецЕсли;
			
		НомерКонСтроки = СчСтрок;
		СчСтрок = СчСтрок + 1;
		
		Если СчСтрок>пТЗ.КоличествоСтрок() Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла; 
	
	//Расчет долей показателей
	Для Сч = 1 По КолВоПоказателей Цикл
		ИмяПоказателя = пПоказателиГрупп.ПолучитьЗначение(Сч,НеВажно);
		
		Если Лев(ИмяПоказателя,3)="прц" Тогда
			ИмяПоказателяДляРасчетаДоли = Сред(ИмяПоказателя,4);
			
			лТЗ.ВыбратьСтроки();
			Пока лТЗ.ПолучитьСтроку() = 1 Цикл       
				ЗначениеРасчетногоПоказателя = лТЗ.ПолучитьЗначение(лТЗ.НомерСтроки,ИмяПоказателяДляРасчетаДоли);
				ЗначениеДоли = ?(лТЗ.Итог(ИмяПоказателяДляРасчетаДоли)<>0,ЗначениеРасчетногоПоказателя/лТЗ.Итог(ИмяПоказателяДляРасчетаДоли)*100,0);
				лТЗ.УстановитьЗначение(лТЗ.НомерСтроки,ИмяПоказателя,ЗначениеДоли);   
			КонецЦикла;                     
			
		ИначеЕсли Лев(ИмяПоказателя,4)="сред" Тогда             
			ИмяПоказателяДляРасчетаСреднего = Сред(ИмяПоказателя,5);

			лТЗ.ВыбратьСтроки();
			Пока лТЗ.ПолучитьСтроку() = 1 Цикл       
				//ЗначениеРасчетногоПоказателя = лТЗ.ПолучитьЗначение(лТЗ.НомерСтроки,ИмяПоказателяДляРасчетаДоли);
				//ЗначениеДоли = ?(лТЗ.Итог(ИмяПоказателяДляРасчетаДоли)<>0,ЗначениеРасчетногоПоказателя/лТЗ.Итог(ИмяПоказателяДляРасчетаДоли)*100,0);
				//лЗНачение = 1;
				//лТЗ.УстановитьЗначение(лТЗ.НомерСтроки,ИмяПоказателя,лЗначение);   
			КонецЦикла;                     
		КонецЕсли;
	КонецЦикла;			
	
	Возврат лТЗ;          
КонецФункции 

//--------------------------------------------------------------------------------
Функция СмотретьДерево(пТЗ,Родитель = "",УровеньДерева = 1)  
	//Печатаем перемещения
	Если УровеньДерева = 2 Тогда   
		//ПеремещениеНасыщениеАртикульности(пТЗ,"",1);
	КонецЕсли;
	
	ВыбраннаяСтрока = 0;
	Если пТЗ.ВыбратьСтроку(ВыбраннаяСтрока) = 1 Тогда	//Если Ок, то заходим в Детализацию
		Если пТЗ.ВидимостьКолонки("ТЗДетализация") <> -1 Тогда
			пТЗ.ПолучитьСтрокуПоНомеру(ВыбраннаяСтрока);
			СмотретьДерево(пТЗ.ТЗДетализация,пТЗ,УровеньДерева + 1);
		КонецЕсли;
	Иначе												//Если не Ок, то возращаемся к Родителю
		Если Родитель <> "" Тогда
			СмотретьДерево(Родитель,,УровеньДерева - 1);  
		КонецЕсли;
	КонецЕсли;
КонецФункции	// СмотретьДерево(пТЗ)               

//---------------------------------------------------------------------------------
Функция ПолучитьЦенуВозврата(ТекПозиция, ДатаДок)
	
	Если ДатаДок <= '10.11.2013' Тогда
		ТипЗакупочныхЦен = "Закупочные"; // ВНИМАНИЕ!!! Жестко прописано название закупочных цен
	Иначе
		ТипЗакупочныхЦен = "2014 Закупочная"; // ВНИМАНИЕ!!! Жестко прописано название закупочных цен
	КонецЕсли;
	СпрТипЦен = СоздатьОбъект("Справочник.ТипыЦен");
	СпрТипЦен.НайтиПоНаименованию(ТипЗакупочныхЦен);
	СпрЦен = СоздатьОбъект("Справочник.Цены");
	СпрЦен.ИспользоватьВладельца(ТекПозиция);
	СпрЦен.НайтиПоРеквизиту("ТипЦен", СпрТипЦен, 0);
	
	Возврат СпрЦен.Цена.Получить(ДатаДок);
	
КонецФункции                                     

//--------------------------------------------------------------------------------- 
Функция ПолучитьЦенуПрайса(пТовар,пПоказатель = "Цена")  
	ИскомаяСтрока = 0;
	
	Если ТаблицаЦен.НайтиЗначение(пТовар,ИскомаяСтрока,"Товар") = 1 Тогда
		Возврат ТаблицаЦен.ПолучитьЗначение(ИскомаяСтрока,пПоказатель);	
	КонецЕсли;
КонецФункции	// ПолучитьЦенуПрайса

//---------------------------------------------------------------------------------
Процедура ПриОткрытии(ФлагВосстановленияНастройки)
	Если ФлагВосстановленияНастройки = 0 Тогда
		флПродажиВозвраты = 2;
	КонецЕсли;
	
	ДопПараметры = СоздатьОбъект("СписокЗначений"); 
	                                                                  
	лСпр = СоздатьОбъект("Справочник.ВидыСвойств"); 
	лСпр.НайтиПоКоду("00004");//Группы контрагентов
	ДопПараметры.ДобавитьЗначение(лСпр.ТекущийЭлемент(),"ТорговаяСеть");

	лСпр = СоздатьОбъект("Справочник.ВидыСвойств"); 
	лСпр.НайтиПоКоду("00003");//Основное свойство
	ДопПараметры.ДобавитьЗначение(лСпр.ТекущийЭлемент(),"ПодгруппаТовара");

	Фильтр.Установить("ЗагрузкаНастройки"	,1);
	Фильтр.Установить("ОписаниеФильтра"		,ОписаниеФильтра);
	Фильтр.Установить("ДопПараметры",ДопПараметры);
	
	ОткрытьФорму("Обработка.УстановкаФильтра",Контекст);
КонецПроцедуры  

//--------------------------------------------------------------------------------- 
Процедура ИзменениеПорядкаГрупп(НаправлениеСдвига)
	ТекСтр = Группировка.ТекущаяСтрока();
	ПослСдвигСтр = Группировка.РазмерСписка() - 1;
	Если ТекСтр <= ПослСдвигСтр Тогда
		Если не((НаправлениеСдвига = 1) и (ТекСтр = ПослСдвигСтр)) Тогда
			Группировка.СдвинутьЗначение(НаправлениеСдвига, ТекСтр);
		КонецЕсли;
	Иначе
		Предупреждение("Группировка ""По документам движения"" всегда находится
		               |в конце списка и не перемещается.",60);
	КонецЕсли;
КонецПроцедуры

//--------------------------------------------------------------------------------- 
Процедура ПечатьГруппировки(пТЗ,пТаб,пУрГруппировки=1,пСортируемыеКолонки = "")
	Если пТЗ.ВидимостьКолонки("Группировка") = -1 Тогда
		Возврат;
    КонецЕсли;

	печПодгруппа = "";
	печЦена = "";
	печПоказатель = ""; 
	печСрокГодности = "";
	
	пТЗ.Сортировать(пСортируемыеКолонки);
	
	пТЗ.ВыбратьСтроки();
	Пока пТЗ.ПолучитьСтроку() = 1 Цикл
		печГруппировка = пТЗ.Группировка;  
		пп = пТЗ.НомерСтроки;
		
		лИмяСекции = "Гр"+(6 - МаксГруппировка + пУрГруппировки);
		Таб.ВывестиСекцию(лИмяСекции + "|ОснВертик");
		
		Если пТЗ.ИмяГруппировки = "Номенклатура" Тогда
			Если флПодгруппа = 1 Тогда
				печПодгруппа = пТЗ.Группировка.ОсновноеСвойство.ЗначениеСвойства;
				Таб.ПрисоединитьСекцию(лИмяСекции + "|ВертикПодгруппа");
				печПодгруппа = "";
			КонецЕсли;
		
			//******* показатели цен ***************
			Если флСтавкаНДС = 1 Тогда
				печЦена = ПолучитьЦенуПрайса(пТЗ.Группировка,"СтавкаНДС");
				Если ПустоеЗначение(печЦена) = 1 Тогда
					печЦена = пТЗ.Группировка.СтавкаНДС;
				КонецЕсли;
				
				Таб.ПрисоединитьСекцию(лИмяСекции + "|ВертикДопКолонка");
			КонецЕсли;
		
			Если флЦенаСНДС = 1 Тогда
				печЦена = глФРМ(ПолучитьЦенуПрайса(пТЗ.Группировка,"ЦенаСНДС"));
				Таб.ПрисоединитьСекцию(лИмяСекции + "|ВертикДопКолонка");
			КонецЕсли;
		
			Если флЦенаБезНДС = 1 Тогда
				печЦена = глФРМ(ПолучитьЦенуПрайса(пТЗ.Группировка,"ЦенаБезНДС"));
				Таб.ПрисоединитьСекцию(лИмяСекции + "|ВертикДопКолонка");
			КонецЕсли;
		
			Если флСуммаНДС = 1 Тогда
				печЦена = глФРМ(ПолучитьЦенуПрайса(пТЗ.Группировка,"СуммаНДС"));
				Таб.ПрисоединитьСекцию(лИмяСекции + "|ВертикДопКолонка");
			КонецЕсли;                              
			
			Если флСрокГодности = 1 Тогда
				печСрокГодности = пТЗ.Группировка._СрокГодности;
				Таб.ПрисоединитьСекцию(лИмяСекции + "|ВертикСрокГодности");
			КонецЕсли;

			Если флШтрихКод = 1 Тогда
				печШтрихКод = пТЗ.Группировка.БазоваяЕдиница.ШтрихКод;
				Таб.ПрисоединитьСекцию(лИмяСекции + "|ВертикШтрихКод");
			КонецЕсли;
			//**************************************
			
		Иначе
			Если флПодгруппа = 1 Тогда
				Таб.ПрисоединитьСекцию(лИмяСекции + "|ВертикПодгруппа");
			КонецЕсли;
		
			//******* показатели цен ***************
			Если флСтавкаНДС = 1 Тогда
				Таб.ПрисоединитьСекцию(лИмяСекции + "|ВертикДопКолонка");
			КонецЕсли;
		
			Если флЦенаСНДС = 1 Тогда
				Таб.ПрисоединитьСекцию(лИмяСекции + "|ВертикДопКолонка");
			КонецЕсли;
		
			Если флЦенаБезНДС = 1 Тогда
				Таб.ПрисоединитьСекцию(лИмяСекции + "|ВертикДопКолонка");
			КонецЕсли;
		
			Если флСуммаНДС = 1 Тогда
				Таб.ПрисоединитьСекцию(лИмяСекции + "|ВертикДопКолонка");
			КонецЕсли;

			Если флСрокГодности = 1 Тогда
				Таб.ПрисоединитьСекцию(лИмяСекции + "|ВертикСрокГодности");
			КонецЕсли;

			Если флШтрихКод = 1 Тогда
				Таб.ПрисоединитьСекцию(лИмяСекции + "|ВертикШтрихКод");
			КонецЕсли;
			//**************************************
		КонецЕсли;
	                      
		ИмяПоказателя = "";
		НаименованиеПоказателя = "";
		Для сч = 1 По Показатели.РазмерСписка() Цикл
			Если Показатели.Пометка(сч) = 1 Тогда              
				ИмяПоказателя = Показатели.ПолучитьЗначение(сч,НаименованиеПоказателя);

				печПоказатель = пТЗ.ПолучитьЗначение(пТЗ.НомерСтроки,ИмяПоказателя);
				
				Если Лев(ИмяПоказателя,3) = "прц" Тогда
					печПоказатель = "" + Окр(печПоказатель,1) + "%";
				ИначеЕсли ИмяПоказателя = "ОбъёмПродаж" Тогда
					печПоказатель = Формат(печПоказатель,"N019.3. ");
				Иначе
					печПоказатель = Формат(печПоказатель,"N019.2. ");
				КонецЕсли;
				
				Таб.ПрисоединитьСекцию(лИмяСекции + "|ВертикПоказатель");
			КонецЕсли;
		КонецЦикла;
		
		Таб.ПрисоединитьСекцию(лИмяСекции + "|КонецВертикалке");

		
		Если пТЗ.ВидимостьКолонки("ТЗДетализация") <> -1 Тогда
			ПечатьГруппировки(пТЗ.ТЗДетализация,пТаб,пУрГруппировки+1,пСортируемыеКолонки);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры	// ПечатьГруппировки(лТЗ)

//--------------------------------------------------------------------------------- 
Процедура Печать(пТаблица,пСортируемыеКолонки = "")
	Если ПустоеЗначение(Таб)=1 Тогда
		Таб = СоздатьОбъект ("Таблица");  
	Иначе     
		Таб.Очистить();
	КонецЕсли;
          
	Если ПустоеЗначение(Фильтр.Получить("УсловияЗапроса")) = 0 Тогда
		СтроковоеПредставлениеФильтра = Фильтр.Получить("СтрЗагУсловия");
	Иначе
		СтроковоеПредставлениеФильтра = "";
	КонецЕсли;
	
	Если (флЦенаБезНДС=1)или(флСуммаНДС=1)или(флЦенаСНДС=1) Тогда
		ОписаниеЦены = "Тип цен: " + СокрЛП(ВыбТипЦен.Наименование);
	Иначе
		ОписаниеЦены = "";
	КонецЕсли;
	
	
	Таб.ВывестиСекцию ("Шапка");  
	
	//******Шапка таблицы 
	ИмяГруппировки = "";
	печГруппировка = "";
	Для сч = 1 По Группировка.РазмерСписка() Цикл
		Если Группировка.Пометка(сч) = 1 Тогда              
			Группировка.ПолучитьЗначение(сч,ИмяГруппировки);
			печГруппировка = печГруппировка + ИмяГруппировки + "/";
		КонецЕсли;
	КонецЦикла;

	//печПоказатель = "";
	Таб.ВывестиСекцию ("ШапкаТаблицы|ОснВертик");
	Если флПодгруппа = 1 Тогда
		Таб.ПрисоединитьСекцию("ШапкаТаблицы|ВертикПодгруппа");
	КонецЕсли;
	                 
	//******* показатели цен ***************
	Если флСтавкаНДС = 1 Тогда
		печДопКолонка = "Ставка НДС";
		Таб.ПрисоединитьСекцию("ШапкаТаблицы|ВертикДопКолонка");
	КонецЕсли;

	Если флЦенаСНДС = 1 Тогда
		печДопКолонка = "Цена"+РазделительСтрок+"(с НДС)";
		Таб.ПрисоединитьСекцию("ШапкаТаблицы|ВертикДопКолонка");
	КонецЕсли;

	Если флЦенаБезНДС = 1 Тогда
		печДопКолонка = "Цена"+РазделительСтрок+"(без НДС)";
		Таб.ПрисоединитьСекцию("ШапкаТаблицы|ВертикДопКолонка");
	КонецЕсли;

	Если флСуммаНДС = 1 Тогда
		печДопКолонка = "Сумма НДС";
		Таб.ПрисоединитьСекцию("ШапкаТаблицы|ВертикДопКолонка");
	КонецЕсли;  
	
	Если флСрокГодности = 1 Тогда
		Таб.ПрисоединитьСекцию("ШапкаТаблицы|ВертикСрокГодности");
	КонецЕсли;
	
	Если флШтрихКод = 1 Тогда
		Таб.ПрисоединитьСекцию("ШапкаТаблицы|ВертикШтрихКод");
	КонецЕсли;
	//**************************************
	
	ИмяПоказателя = "";
	НаименованиеПоказателя = "";
	Для сч = 1 По Показатели.РазмерСписка() Цикл
		Если Показатели.Пометка(сч) = 1 Тогда              
			ИмяПоказателя = Показатели.ПолучитьЗначение(сч,НаименованиеПоказателя);
			Таб.ПрисоединитьСекцию("ШапкаТаблицы|ВертикПоказатель");
		КонецЕсли;
	КонецЦикла;
	
	Таб.ПрисоединитьСекцию("ШапкаТаблицы|КонецВертикалке");
	
 
	//******Сетка таблицы
	ПечатьГруппировки(пТаблица,Таб,,пСортируемыеКолонки);
	              
	//******Подвал таблицы 
	Таб.ВывестиСекцию ("Итого|ОснВертик");
	Если флПодгруппа = 1 Тогда
		Таб.ПрисоединитьСекцию("Итого|ВертикПодгруппа");
	КонецЕсли;

	//******* показатели цен ***************
	Если флСтавкаНДС = 1 Тогда
		Таб.ПрисоединитьСекцию("Итого|ВертикДопКолонка");
	КонецЕсли;

	Если флЦенаСНДС = 1 Тогда
		Таб.ПрисоединитьСекцию("Итого|ВертикДопКолонка");
	КонецЕсли;

	Если флЦенаБезНДС = 1 Тогда
		Таб.ПрисоединитьСекцию("Итого|ВертикДопКолонка");
	КонецЕсли;

	Если флСуммаНДС = 1 Тогда
		Таб.ПрисоединитьСекцию("Итого|ВертикДопКолонка");
	КонецЕсли;    
	
	Если флСрокГодности = 1 Тогда
		Таб.ПрисоединитьСекцию("Итого|ВертикСрокГодности");
	КонецЕсли;
	
	Если флШтрихКод = 1 Тогда
		Таб.ПрисоединитьСекцию("Итого|ВертикШтрихКод");
	КонецЕсли;
	//**************************************
    
	НеВажно = "";
	
	Для сч = 1 По Показатели.РазмерСписка() Цикл
		Если Показатели.Пометка(сч) = 1 Тогда 
			Если Показатели.ПолучитьЗначение(сч,НеВажно) = "СуммаПродаж" Тогда
				печИтог = глТЗДерево.Итог("СуммаПродаж"); 
				печИтог = Формат(печИтог,"N019.2. ");
			Иначе
				печИтог = "";
			КонецЕсли;
			
			
			
			Таб.ПрисоединитьСекцию("Итого|ВертикПоказатель");
		КонецЕсли;
	КонецЦикла;
	
	Таб.ПрисоединитьСекцию("Итого|КонецВертикалке");
	//********************
	
	Таб.ТолькоПросмотр (1);                           
	Таб.ПараметрыСтраницы(2,,,,,,,,,1);//Ландшафт,Автомасштаб
	Таб.Опции(0,0,0,0,"ОпцииПечатиРейтингаПродаж");
	Таб.Показать("Рейтинг продаж");
КонецПроцедуры	// Печать(пТЗ)

//--------------------------------------------------------------------------------- 
Процедура Сформировать()   
	//******** проверка корректности параметров ********
	Если (ПустоеЗначение(ВыбНачПериода) = 1 )или(ПустоеЗначение(ВыбКонПериода) = 1) Тогда
		Предупреждение("Укажите период отчета!",10);
		Возврат;
	КонецЕсли;
	
	Если ВыбНачПериода > ВыбНачПериода Тогда
		Предупреждение("Дата начала периода больше даты конца периода!",10);
		Возврат;
	КонецЕсли;  
    
	лЕстьГруппировка = 0;
	Для сч = 1 По Группировка.РазмерСписка() Цикл
		Если Группировка.Пометка(сч) = 1 Тогда
			лЕстьГруппировка = 1;
			Прервать;
		КонецЕсли;
	КонецЦикла;  
	Если лЕстьГруппировка = 0 Тогда
		Предупреждение ("Должна быть установлена хоть одна группировка!",10);
		Возврат;
	КонецЕсли;
	
	
	//ПозНоменклатура = Группировка.НайтиЗначение("Номенклатура");
	//лНоменклатураЕсть = Группировка.Пометка(ПозНоменклатура);
	
	
	Если ((флСуммаНДС = 1)или(флЦенаБезНДС = 1)или(флЦенаСНДС=1))и(ПустоеЗначение(ВыбТипЦен) = 1) Тогда
		Предупреждение("Выберите тип цены!",10);
		Возврат;
	КонецЕсли;
	//**************************************************
	
	ЗаполнитьТаблицуЦен();	
	//Возврат;
	
	ЗФ1=Фильтр.Получить("ЗФ1");
	ЗФ2=Фильтр.Получить("ЗФ2");
	ЗФ3=Фильтр.Получить("ЗФ3");
	ЗФ4=Фильтр.Получить("ЗФ4");
	ЗФ5=Фильтр.Получить("ЗФ5");
	ЗФ6=Фильтр.Получить("ЗФ6");
	ЗФ7=Фильтр.Получить("ЗФ7");
	ЗФ8=Фильтр.Получить("ЗФ8");
	                            
	ТекстЗапроса =	"
		|Период с ВыбНачПериода по ВыбКонПериода;
		|Дат =	Документ.Реализация.ТекущийДокумент.ДатаДок, 
		|		Документ.ВозвратОтПокупателя.ТекущийДокумент.ДатаДок;
		|Проект =	Документ.Реализация.Проект,
		|			Документ.ВозвратОтПокупателя.Проект;
		|Префикс =	Документ.Реализация._МаршрутныйАдрес.Префикс,
		|			Документ.ВозвратОтПокупателя._МаршрутныйАдрес.Префикс; 
		|Регион =	Документ.Реализация._МаршрутныйАдрес.РайонГородРегиона.Владелец,
		|			Документ.ВозвратОтПокупателя._МаршрутныйАдрес.РайонГородРегиона.Владелец; 
		|РайонГород =	Документ.Реализация._МаршрутныйАдрес.РайонГородРегиона,
		|				Документ.ВозвратОтПокупателя._МаршрутныйАдрес.РайонГородРегиона; 
		|МаршАдрес =	Документ.Реализация._МаршрутныйАдрес,
		|				Документ.ВозвратОтПокупателя._МаршрутныйАдрес; 
		|Контрагент =	Документ.Реализация.Контрагент,
		|				Документ.ВозвратОтПокупателя.Контрагент;
		|ТорговаяСеть =	Документ.Реализация.Контрагент.ОсновноеСвойство.ЗначениеСвойства,
		|			Документ.ВозвратОтПокупателя.Контрагент.ОсновноеСвойство.ЗначениеСвойства;
		|Номенклатура =	Документ.Реализация.Номенклатура, 
		|				Документ.ВозвратОтПокупателя.Номенклатура;
		|ПодгруппаТовара =	Документ.Реализация.Номенклатура.ОсновноеСвойство.ЗначениеСвойства, 
		|					Документ.ВозвратОтПокупателя.Номенклатура.ОсновноеСвойство.ЗначениеСвойства;
		|ЕдИзм =	Документ.Реализация.Номенклатура.БазоваяЕдиница.ОКЕИ,
		|			Документ.ВозвратОтПокупателя.Номенклатура.БазоваяЕдиница.ОКЕИ;
		|Вес =	Документ.Реализация.Номенклатура.БазоваяЕдиница.Вес,
		|		Документ.ВозвратОтПокупателя.Номенклатура.БазоваяЕдиница.Вес;
		|РеализацияСумма = Документ.Реализация.Сумма;
		|ВозвратСумма = Документ.ВозвратОтПокупателя.Сумма;
		|РеализацияСуммаНДС = Документ.Реализация.СуммаНДС;
		|ВозвратСуммаНДС = Документ.ВозвратОтПокупателя.СуммаНДС;
		|КоличествоРеализация = Документ.Реализация.Количество;
		|КоличествоВозврат = Документ.ВозвратОтПокупателя.Количество;
		|СуммаВклНДСр = Документ.Реализация.СуммаВклНДС;
		|СуммаВклНДСв = Документ.ВозвратОтПокупателя.СуммаВклНДС;
		//==============Группировка==============
		|Группировка Документ;                                        
		|Группировка Номенклатура без групп;
		//==============Функции==============  
		|Функция СуммаКоличествоРеализацияКг = Сумма(КоличествоРеализация) когда (ЕдИзм = Константа.ЕдиницаВесаОКЕИ);
		|Функция СуммаКоличествоВозвратКг = Сумма(КоличествоВозврат) когда (ЕдИзм = Константа.ЕдиницаВесаОКЕИ);
		|Функция СуммаКоличествоРеализацияШт = Сумма(КоличествоРеализация*Вес) когда (ЕдИзм = Константа.ЕдиницаШтукОКЕИ);
		|Функция СуммаКоличествоВозвратШт = Сумма(КоличествоВозврат*Вес) когда (ЕдИзм = Константа.ЕдиницаШтукОКЕИ);
		|Функция СуммаРеализация = Сумма(РеализацияСумма);
		|Функция СуммаВозврат = Сумма(ВозвратСумма);
		|Функция СуммаНДСРеализация = Сумма(РеализацияСуммаНДС) когда (СуммаВклНДСр = 0);
		|Функция СуммаНДСВозврат = Сумма(ВозвратСуммаНДС) когда (СуммаВклНДСв = 0);
		|Функция СуммаКоличествоВозвратКгц = Сумма(КоличествоВозврат*ПолучитьЦенуВозврата(Номенклатура, Дат)) когда (ЕдИзм = Константа.ЕдиницаВесаОКЕИ);
		|Функция СуммаКоличествоВозвратШтц = Сумма(КоличествоВозврат*ПолучитьЦенуВозврата(Номенклатура, Дат)) когда (ЕдИзм = Константа.ЕдиницаШтукОКЕИ);
		//********
		//|Функция СуммаПродаж =
		//|Функция ОбъёмПродаж = 
		|";        
		
	ТекстЗапроса = ТекстЗапроса + Фильтр.Получить("УсловияЗапроса");
        
	Запрос = СоздатьОбъект("Запрос");
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	//Сообщить("Запрос: " + ТекущееВремя());
	
	
	
	лТЗ = "";
	Запрос.Выгрузить(лТЗ,1,0);
	//лТЗ.ВыбратьСтроку();      
	
	лТЗ.НоваяКолонка("СуммаПродаж","Число");
	лТЗ.НоваяКолонка("ОбъёмПродаж","Число");
	           
	//Расчет показателей
	лТЗ.ВыбратьСтроки();
	Пока лТЗ.ПолучитьСтроку() = 1 Цикл 
		лТЗ.СуммаПродаж = ?(флПродажиВозвраты<>3,лТЗ.СуммаРеализация,0) - ?(флПродажиВозвраты<>1,лТЗ.СуммаВозврат,0); 
		лТЗ.ОбъёмПродаж = ?(флПродажиВозвраты<>3,лТЗ.СуммаКоличествоРеализацияКг + лТЗ.СуммаКоличествоРеализацияШт,0) -
							?(флПродажиВозвраты<>1,лТЗ.СуммаКоличествоВозвратКг + лТЗ.СуммаКоличествоВозвратШт,0);
	КонецЦикла;         
						
	//Очистка от пустых позиций
	лТЗ.ВыбратьСтроки();
	Пока лТЗ.ПолучитьСтроку()=1 Цикл
		Пока (лТЗ.ПолучитьЗначение(лТЗ.НомерСтроки,"СуммаПродаж")=0)
			и(лТЗ.ПолучитьЗначение(лТЗ.НомерСтроки,"ОбъёмПродаж")=0)  Цикл
			лТЗ.УдалитьСтроку(); //следующая строка стала текущей                     
			Если лТЗ.НомерСтроки = 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

	//лТЗ.ВыбратьСтроку();      
	
					   
	 
	//===================Группировочное дерево
	спГруппировка = СоздатьОбъект("СписокЗначений");
	//спГруппировка.ИзСтрокиСРазделителями("""Проект"",""Префикс"",""МаршАдрес"",""Контрагент"",""ТорговаяСеть""");
                                                                                
	НеВажно = "";
	Для сч = 1 По Группировка.РазмерСписка() Цикл
		Если Группировка.Пометка(сч) = 1 Тогда
			спГруппировка.ДобавитьЗначение(Группировка.ПолучитьЗначение(сч,НеВажно));
		КонецЕсли;
	КонецЦикла; 
	МаксГруппировка = спГруппировка.РазмерСписка();
	
	спПоказателиГрупп = СоздатьОбъект("СписокЗначений");
	спПоказателиГрупп.ИзСтрокиСРазделителями("""СуммаПродаж"",""ОбъёмПродаж"",""прцСуммаПродаж"",""прцОбъёмПродаж"",""средСуммаПродаж"",""средОбъёмПродаж"",
											|""СуммаКоличествоРеализацияКг"",""СуммаКоличествоВозвратКг"",
											|""СуммаКоличествоРеализацияШт"",""СуммаКоличествоВозвратШт"",
											|""СуммаРеализация"",""СуммаВозврат""");
	
	                          
	глТЗДерево = ЗагрузитьВДеревоТЗ(лТЗ,спГруппировка,спПоказателиГрупп);
	//Сообщить("Дерево: " + ТекущееВремя());
	
	//глТЗДерево.Сортировать("СуммаРеализация");
	//СмотретьДерево(глТЗДерево);
                         
	
	Печать(глТЗДерево);
	
	//Сообщить("Печать: " + ТекущееВремя());
	//Сообщить("_________________________");
	
	ЗаписьЖурналаРегистрации("Отчет: Рейтинг продаж",,"Формирование отчета")
	
КонецПроцедуры	// Сформировать

//---------------------------------------------------------------------------------
//---------------------------------------------------------------------------------
//---------------------------------------------------------------------------------

Группировка.ДобавитьЗначение("ТорговаяСеть", "Торговая сеть");
Группировка.ДобавитьЗначение("Префикс", "Префикс");
Группировка.ДобавитьЗначение("Регион", "Регион");
Группировка.ДобавитьЗначение("РайонГород", "Район/Город");
Группировка.ДобавитьЗначение("МаршАдрес", "Маршрутный адрес");
Группировка.ДобавитьЗначение("Контрагент", "Контрагент");
Группировка.ДобавитьЗначение("ПодгруппаТовара", "Подгруппа товара");
Группировка.ДобавитьЗначение("Номенклатура", "Номенклатура");
Группировка.ДобавитьЗначение("Документ", "Регистратор");                  


Показатели.ДобавитьЗначение("СуммаПродаж","Сумма продаж");
Показатели.ДобавитьЗначение("ОбъёмПродаж","Объём продаж");
Показатели.ДобавитьЗначение("прцСуммаПродаж","Доля продаж (по сумме)");//ДоляПродажСум
Показатели.ДобавитьЗначение("прцОбъёмПродаж","Доля продаж (по объёму)");//ДоляПродажКол
Показатели.ДобавитьЗначение("средСуммаПродаж","Сумма продаж (сред)");
Показатели.ДобавитьЗначение("средОбъёмПродаж","Объём продаж (сред)");


//Показатели.ДобавитьЗначение("СуммаВозврата","Сумма возврата");
//Показатели.ДобавитьЗначение("ОбъёмВозврата","Объём возврата");
//Показатели.ДобавитьЗначение("ПроцентВозвратаОтПродаж","Объём возврата");

//Показатели.ДобавитьЗначение("Подгруппа","Подгруппа");
//Показатели.ДобавитьЗначение("Цена","Цена");   

ТаблицаЦен = СоздатьОбъект("ТаблицаЗначений");
ТаблицаЦен.НоваяКолонка("Товар");
ТаблицаЦен.НоваяКолонка("Цена");
ТаблицаЦен.НоваяКолонка("СтавкаНДС");
ТаблицаЦен.НоваяКолонка("ЦенаСНДС");
ТаблицаЦен.НоваяКолонка("ЦенаБезНДС");
ТаблицаЦен.НоваяКолонка("СуммаНДС");

ОписаниеФильтра="ТорговаяСеть	;Сеть			;Справочник.ЗначенияСвойств
				|Префикс		;Префикс		;Справочник.Префикс
				|Контрагент		;Контрагенты	;Справочник.Контрагенты
				|ПодгруппаТовара;Подгруппа товара;Справочник.ЗначенияСвойств
				|Номенклатура	;Номенклатура	;Справочник.Номенклатура";
РежимОтладки = 1;
